{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed. It must be between 3 and 24 characters in length and use numbers and lower-case letters only."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "boshvnet-crp",
      "metadata": {
        "description": "name of the virtual network"
      }
    },
    "subnetNameForBosh": {
      "type": "string",
      "defaultValue": "Bosh",
      "metadata": {
        "description": "name of the subnet for Bosh"
      }
    },
    "NSGNameForBosh": {
      "type": "string",
      "defaultValue": "BoshSecurityGroup",
      "metadata": {
        "description": "name of the security group for Bosh"
      }
    },
    "subnetNameForCloudFoundry": {
      "type": "string",
      "defaultValue": "CloudFoundry",
      "metadata": {
        "description": "name of the subnet for CloudFoundy"
      }
    },
    "NSGNameForCF": {
      "type": "string",
      "defaultValue": "CFSecurityGroup",
      "metadata": {
        "description": "name of the security group for CF"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "name of the vm, will be used as DNS Name for the Public IP used to access the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
        "description": "Size of vm"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminSSHKey": {
      "type": "securestring",
      "metadata": {
        "description": "Public SSH key to add to admin user."
      }
    },
    "enableDNSOnDevbox": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "A default DNS will be setup in the devbox if it is true."
      }
    },
    "tenantID": {
      "type": "string",
      "defaultValue": "TENANT-ID",
      "metadata": {
        "description": "ID of the tenant. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
      }
    },
    "clientID": {
      "type": "string",
      "defaultValue": "CLIENT-ID",
      "metadata": {
        "description": "ID of the client. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
      }
    },
    "clientSecret": {
      "type": "securestring",
      "defaultValue": "CLIENT-SECRET",
      "metadata": {
        "description": "secret of the client. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
      }
    },
    "pivnetAPIToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "API Token for Pivotal Network"
      }
    }
  },
  "variables": {
    "api-version": "2015-05-01-preview",
    "location": "[resourceGroup().location]",
    "storageAccountType": "Standard_GRS",
    "vmStorageAccountContainerName": "vhds",
    "storageid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('newStorageAccountName'))]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "addressPrefix": "10.0.0.0/16",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Name": "[parameters('subnetNameForBosh')]",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
    "subnet1NSG": "[parameters('NSGNameForBosh')]",
    "subnet2Name": "[parameters('subnetNameForCloudFoundry')]",
    "subnet2Prefix": "10.0.16.0/20",
    "subnet2NSG": "[parameters('NSGNameForCF')]",
    "nicName": "[parameters('vmName')]",
    "devboxPrivateIPAddress": "10.0.0.100",
    "devboxPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'),'-devbox'))]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "14.04.2-LTS"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-devbox')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmName')]"
        }
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'),'-bosh')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmName'), '-cf')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet1NSG')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-to-jumpbox",
            "properties": {
              "description": "Allow Inbound SSH To Jumpbox",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('devboxPrivateIPAddress'), '/32')]",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet2NSG')]",
      "location": "[variables('location')]"
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet1NSG'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet2NSG'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet1NSG'))]"
              }
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet2NSG'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmName'), '-devbox')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('devboxPrivateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),'-devbox'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiversion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [{
                "path": "[variables('sshKeyPath')]",
                "keyData": "[parameters('adminSSHKey')]"
              }]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/initdevbox')]",
      "apiVersion": "[variables('api-version')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/cf-platform-eng/bosh-azure-template/master/launch_script.sh"
          ],
          "commandToExecute": "sh launch_script.sh",
          "VNET-NAME": "[variables('virtualNetworkName')]",
          "SUBNET-NAME": "[variables('subnet1Name')]",
          "SUBNET-NAME-FOR-CF": "[variables('subnet2Name')]",
          "NSG-NAME-FOR-CF": "[variables('subnet2NSG')]",
          "SUBSCRIPTION-ID": "[subscription().subscriptionId]",
          "STORAGE-ACCOUNT-NAME": "[parameters('newStorageAccountName')]",
          "STORAGE-ACCESS-KEY": "[listKeys(variables('storageid'),variables('api-version')).key1]",
          "RESOURCE-GROUP-NAME": "[resourceGroup().name]",
          "TENANT-ID": "[parameters('tenantID')]",
          "CLIENT-ID": "[parameters('clientID')]",
          "CLIENT-SECRET": "[parameters('clientSecret')]",
          "cf-ip": "[reference(concat(parameters('vmName'),'-cf')).ipAddress]",
          "bosh-ip": "[reference(concat(parameters('vmName'),'-bosh')).ipAddress]",
          "username": "[parameters('adminUserName')]",
          "enable-dns": "[parameters('enableDNSOnDevbox')]",
          "pivnet-api-token": "[parameters('pivnetAPIToken')]"
        }
      }
    }
  ]
}
